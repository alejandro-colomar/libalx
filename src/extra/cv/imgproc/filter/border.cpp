/******************************************************************************
 *	Copyright (C) 2018	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include "libalx/extra/cv/imgproc/filter/border.hpp"

#include <cstddef>

#include <opencv2/core/mat.hpp>
#include <opencv2/imgproc.hpp>


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/
#define ALX_CV_MAX_DERIVATIVE	(20)


/******************************************************************************
 ******* enum / struct / union ************************************************
 ******************************************************************************/


/******************************************************************************
 ******* static prototypes ****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* global functions *****************************************************
 ******************************************************************************/
int	alx::CV::border		(class cv::Mat *img, ptrdiff_t size)
{
	class cv::Mat	tmp;

	tmp	= cv::Mat(cv::Size(img->cols + size * 2, img->rows + size * 2),
								img->depth());
	cv::copyMakeBorder(*img, tmp, size, size, size, size,
					cv::BORDER_CONSTANT, cv::Scalar(0));
	tmp.copyTo(*img);
	tmp.release();
	return	0;
}

int	alx_cv_border		(void *img, ptrdiff_t size)
{
	return	alx::CV::border((class cv::Mat *)img, size);
}


/******************************************************************************
 ******* static function definitions ******************************************
 ******************************************************************************/


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
