/******************************************************************************
 *	Copyright (C) 2018	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/extra/cv/imgproc/filter.hpp */


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include <cstddef>
#include <cstdint>

#include <opencv2/core/base.hpp>


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* extern "C" ***********************************************************
 ******************************************************************************/
extern	"C"
{
[[gnu::nonnull]]
int	alx_cv_dilate		(void *img, ptrdiff_t i);
[[gnu::nonnull]]
int	alx_cv_erode		(void *img, ptrdiff_t i);
[[gnu::nonnull]]
int	alx_cv_dilate_erode	(void *img, ptrdiff_t i);
[[gnu::nonnull]]
int	alx_cv_erode_dilate	(void *img, ptrdiff_t i);
[[gnu::nonnull]]
int	alx_cv_smooth		(void *img, int method, int ksize);
[[gnu::nonnull]]
int	alx_cv_sobel		(void *img, int dx, int dy, ptrdiff_t ksize);
[[gnu::nonnull]]
int	alx_cv_border		(void *img, ptrdiff_t size, uint8_t val);
}


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
namespace alx {
namespace CV {


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/
enum	Smooth {
	SMOOTH_MEAN = 1,
	SMOOTH_GAUSS,
	SMOOTH_MEDIAN
};


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* prototypes ***********************************************************
 ******************************************************************************/
[[gnu::nonnull]]
int	dilate		(class cv::Mat *img, ptrdiff_t i);
[[gnu::nonnull]]
int	erode		(class cv::Mat *img, ptrdiff_t i);
[[gnu::nonnull]]
int	dilate_erode	(class cv::Mat *img, ptrdiff_t i);
[[gnu::nonnull]]
int	erode_dilate	(class cv::Mat *img, ptrdiff_t i);
[[gnu::nonnull]]
int	smooth		(class cv::Mat *img, int method, ptrdiff_t ksize);
[[gnu::nonnull]]
int	sobel		(class cv::Mat *img, int dx, int dy, ptrdiff_t ksize);
[[gnu::nonnull]]
int	border		(class cv::Mat *img, ptrdiff_t size, uint8_t val);


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
}	/* namespace CV */
}	/* namespace alx */


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
