/******************************************************************************
 *	Copyright (C) 2018	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/extra/cv/core/array.hpp */


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include <cstddef>

#include <opencv2/core.hpp>

#include "libalx/base/compiler/restrict.hpp"


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* extern "C" ***********************************************************
 ******************************************************************************/
extern	"C"
{
/* ----- Operations on arrays */
[[gnu::nonnull]]
int	alx_cv_and_2ref		(void *restrict img, const void *restrict ref);
[[gnu::nonnull]]
void	alx_cv_invert		(void *img);
[[gnu::nonnull]]
int	alx_cv_or_2ref		(void *restrict img, const void *restrict ref);
[[gnu::nonnull]]
int	alx_cv_component	(void *img, ptrdiff_t cmp);
}


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
namespace alx {
namespace CV {


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/
enum	Cmp {
	CMP_BLUE,
	CMP_GREEN,
	CMP_RED
};


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* prototypes ***********************************************************
 ******************************************************************************/
/* ----- Operations on arrays */
[[gnu::nonnull]]
int	and_2ref	(class cv::Mat *restrict img,
			 const class cv::Mat *restrict ref);
[[gnu::nonnull]]
void	invert		(class cv::Mat *img);
[[gnu::nonnull]]
int	or_2ref		(class cv::Mat *restrict img,
			 const class cv::Mat *restrict ref);
[[gnu::nonnull]]
int	component	(class cv::Mat *img, ptrdiff_t cmp);


/******************************************************************************
 ******* namespace ************************************************************
 ******************************************************************************/
}	/* namespace CV */
}	/* namespace alx */


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
