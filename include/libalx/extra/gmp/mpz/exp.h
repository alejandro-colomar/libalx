/******************************************************************************
 *	Copyright (C) 2019	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/extra/gmp/mpz/exp.h */


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include <stdint.h>

#include <gmp.h>

#include "libalx/base/assert/assert.h"


/******************************************************************************
 ******* _Static_assert *******************************************************
 ******************************************************************************/
alx_Static_assert_stdint_types();


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/
/* Rename without alx_ prefix */
#if defined(ALX_NO_PREFIX)
#define mpz_powm_u64(rop, base, exp, mod)  alx_mpz_powm_u64(rop, base, exp, mod)
#define mpz_pow_u64(rop, base, exp)	   alx_mpz_pow_u64(rop, base, exp)
#define mpz_u64_pow_u64(rop, base, exp)	   alx_mpz_u64_pow_u64(rop, base, exp)
#endif


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* prototypes ***********************************************************
 ******************************************************************************/
inline
void	alx_mpz_powm_u64	(mpz_t rop, const mpz_t base, uint64_t exp,
				 const mpz_t mod);
inline
void	alx_mpz_pow_u64		(mpz_t rop, const mpz_t base, uint64_t exp);
inline
void	alx_mpz_u64_pow_u64	(mpz_t rop, uint64_t base, uint64_t exp);


/******************************************************************************
 ******* inline ***************************************************************
 ******************************************************************************/
inline
void	alx_mpz_powm_u64	(mpz_t rop, const mpz_t base, uint64_t exp,
				 const mpz_t mod)
{
	mpz_powm_ui(rop, base, exp, mod);
}

inline
void	alx_mpz_pow_u64		(mpz_t rop, const mpz_t base, uint64_t exp)
{
	mpz_pow_ui(rop, base, exp);
}

inline
void	alx_mpz_u64_pow_u64	(mpz_t rop, uint64_t base, uint64_t exp)
{
	mpz_ui_pow_ui(rop, base, exp);
}


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
