/******************************************************************************
 *	Copyright (C) 2019	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/base/errno/error.h */


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdnoreturn.h>
#include <string.h>


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/
/*
 * void	alx_perrorx(const char *restrict str);
 */
#define alx_perrorx(str)		do				\
{									\
	alx__perrorx__(__FILE__, __LINE__, __func__, str);		\
} while (0)

/*
 * noreturn
 * void	alx_errorx(int status, const char *restrict str);
 */
#define alx_errorx(status, str)	do					\
{									\
	alx__errorx__(status, __FILE__, __LINE__, __func__, str);	\
} while (0)


/* Rename without alx_ prefix */
#if defined(ALX_NO_PREFIX)
#define perrorx(str)		alx_perrorx(str)
#define errorx(status, str)	alx_errorx(status, str)
#endif


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* prototypes ***********************************************************
 ******************************************************************************/
__attribute__((nonnull(1, 3)))
void	alx__perrorx__	(const char *restrict file, int line,
			 const char *restrict func, const char *restrict str);
__attribute__((nonnull(2, 4)))
inline noreturn
void	alx__errorx__	(int status, const char *restrict file, int line,
			 const char *restrict func, const char *restrict str);


/******************************************************************************
 ******* inline ***************************************************************
 ******************************************************************************/
inline noreturn
void	alx__errorx__	(int status, const char *restrict file, int line,
			 const char *restrict func, const char *restrict str)
{

	alx__perrorx__(file, line, func, str);
	exit(status);
}


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
