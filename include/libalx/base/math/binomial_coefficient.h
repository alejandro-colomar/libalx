/******************************************************************************
 *	Copyright (C) 2019	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/base/math/binomial_coefficient.h */


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include <stdint.h>

#include "libalx/base/math/prime.h"


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* enums ****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* structs / unions *****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* function prototypes **************************************************
 ******************************************************************************/
__attribute__((const))
long double alx_binomial_coefficient_ldbl	(int32_t n, int32_t k);
__attribute__((const))
double	alx_binomial_coefficient		(int16_t n, int16_t k);
__attribute__((const))
float	alx_binomial_coefficient_flt		(int16_t n, int16_t k);
__attribute__((nonnull))
int	alx_binomial_coefficient_factorized	(int16_t n, int16_t k,
				int16_t pf[static restrict PRIME_NUMS_QTY_16b]);


/******************************************************************************
 ******* inline functions *****************************************************
 ******************************************************************************/


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
