/******************************************************************************
 *	Copyright (C) 2020	Alejandro Colomar Andr√©s		      *
 *	SPDX-License-Identifier:	LGPL-2.0-only			      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
#pragma once	/* libalx/base/linux/membarrier.h */


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
#include <unistd.h>
#include <sys/syscall.h>


/******************************************************************************
 ******* _Static_assert *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/
#define alx_mb()	asm volatile ("" : : : "memory")

/* Rename without alx_ prefix */
#if defined(ALX_NO_PREFIX)
#define mb()			alx_mb()
#define membarrier(cmd, flags)	alx_membarrier(cmd, flags)
#endif	/* defined(ALX_NO_PREFIX) */


/******************************************************************************
 ******* enum *****************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* struct / union *******************************************************
 ******************************************************************************/


/******************************************************************************
 ******* prototypes ***********************************************************
 ******************************************************************************/
inline
int	alx_membarrier	(int cmd, int flags);


/******************************************************************************
 ******* inline ***************************************************************
 ******************************************************************************/
inline
int	alx_membarrier	(int cmd, int flags)
{
	return	syscall(__NR_membarrier, cmd, flags);
}


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
